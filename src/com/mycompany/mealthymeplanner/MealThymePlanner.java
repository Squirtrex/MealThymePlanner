package com.mycompany.mealthymeplanner;

import static com.codename1.ui.CN.*;
import com.codename1.ui.Display;
import com.codename1.ui.Form;
import com.codename1.ui.Dialog;
import com.codename1.ui.Label;
import com.codename1.ui.plaf.UIManager;
import com.codename1.ui.util.Resources;
import com.codename1.io.Log;
import com.codename1.ui.Toolbar;
import java.io.IOException;
import com.codename1.ui.layouts.BoxLayout;
import com.codename1.io.NetworkEvent;
import com.codename1.ui.Button;
import com.codename1.ui.layouts.GridLayout;
import com.codename1.ui.table.TableLayout;

/**
 * This file was generated by <a href="https://www.codenameone.com/">Codename
 * One</a> for the purpose of building native mobile applications using Java.
 */
public class MealThymePlanner {

    private Form current;
    private Resources theme;
    private Form mainMenuForm;
    private Form futurePlanningForm;
    private Form savedRecipesForm;
    private Form newUserForm;
    private Form myRecipesForm;
    private Form addCustomRecipeForm;
    private Form favoriteRecipesForm;
    private User currentUser = new User();

    public void setMainMenuForm() {
        Form tempForm = new Form("Main Menu", new GridLayout(4, 2));
        Button recommended = new Button("Recommended For You");
        Button savedRecipesButton = new Button("Saved Recipes");
        Button browseButton = new Button("Browse");
        Button searchButton = new Button("Search");
        Button groceryListButton = new Button("Grocery List");
        Button futureButton = new Button("Plan Future Meals");
        Button profileButton = new Button("Profile");
        tempForm.add(recommended);
        tempForm.add(savedRecipesButton);
        tempForm.add(browseButton);
        tempForm.add(searchButton);
        tempForm.add(groceryListButton);
        tempForm.add(futureButton);
        tempForm.add(profileButton);

        futureButton.addActionListener((e) -> futurePlanningForm.show());
        savedRecipesButton.addActionListener((e) -> savedRecipesForm.show());

        mainMenuForm = tempForm;
    }

    public void setFuturePlanningForm() {
        Form tempForm = new Form("Plan Future Meals", BoxLayout.y());
        Button homeButton = new Button("Home");
        tempForm.add(homeButton);
        homeButton.addActionListener((e) -> mainMenuForm.show());

        futurePlanningForm = tempForm;
    }

    public void setSavedRecipesForm() {
        Form tempForm = new Form("Saved Recipes", BoxLayout.y());
        Button homeButton = new Button("Home");
        Button myRecipesButton = new Button("My Recipes");
        Button customButton = new Button("Add Custom Recipe");
        Button favoriteButton = new Button("Favorite Recipes");
        tempForm.add(homeButton);
        tempForm.add(myRecipesButton);
        tempForm.add(customButton);
        tempForm.add(favoriteButton);
        homeButton.addActionListener((e) -> mainMenuForm.show());
        myRecipesButton.addActionListener((e) -> myRecipesForm.show());
        customButton.addActionListener((e) -> addCustomRecipeForm.show());
        favoriteButton.addActionListener((e) -> favoriteRecipesForm.show());

        savedRecipesForm = tempForm;
    }
    
    public void setMyRecipesForm() {
        Form tempForm = new Form("My Recipes", BoxLayout.y());
        Button homeButton = new Button("Home");
        Button backButton = new Button("Back");
        tempForm.add(homeButton);
        tempForm.add(backButton);
        homeButton.addActionListener((e) -> mainMenuForm.show());
        backButton.addActionListener((e) -> savedRecipesForm.show());

        myRecipesForm = tempForm;
    }
    
    public void setAddCustomRecipeForm() {
        Form tempForm = new Form("Add Custom Recipe", BoxLayout.y());
        Button homeButton = new Button("Home");
        Button backButton = new Button("Back");
        tempForm.add(homeButton);
        tempForm.add(backButton);
        homeButton.addActionListener((e) -> mainMenuForm.show());
        backButton.addActionListener((e) -> savedRecipesForm.show());

        addCustomRecipeForm = tempForm;
    }
    
    public void setFavoriteRecipesForm() {
        Form tempForm = new Form("Favorite Recipes", BoxLayout.y());
        Button homeButton = new Button("Home");
        Button backButton = new Button("Back");
        tempForm.add(homeButton);
        tempForm.add(backButton);
        homeButton.addActionListener((e) -> mainMenuForm.show());
        backButton.addActionListener((e) -> savedRecipesForm.show());

        favoriteRecipesForm = tempForm;
    }

    public void setNewUserForm() {
        Form tempForm = new Form("New User", BoxLayout.y());
        Label welcome = new Label("Welcome");
        Button homeButton = new Button("Home");
        tempForm.add(welcome);
        tempForm.add(homeButton);
        homeButton.addActionListener((e) -> mainMenuForm.show());

        newUserForm = tempForm;
    }

    public void setUpForms() {
        setMainMenuForm();
        setFuturePlanningForm();
        setSavedRecipesForm();
        setMyRecipesForm();
        setAddCustomRecipeForm();
        setFavoriteRecipesForm();        
        setNewUserForm();

    }

    public void init(Object context) {
        // use two network threads instead of one
        updateNetworkThreadCount(2);

        theme = UIManager.initFirstTheme("/theme");

        // Enable Toolbar on all Forms by default
        Toolbar.setGlobalToolbar(true);

        // Pro only feature
        Log.bindCrashProtection(true);

        addNetworkErrorListener(err -> {
            // prevent the event from propagating
            err.consume();
            if (err.getError() != null) {
                Log.e(err.getError());
            }
            Log.sendLogAsync();
            Dialog.show("Connection Error", "There was a networking error in the connection to " + err.getConnectionRequest().getUrl(), "OK", null);
        });
    }

    public void start() {

        setUpForms();

        if (currentUser.isNewUser()) {
            newUserForm.show();
        } else {
            mainMenuForm.show();
        }

    }

    public void stop() {
        current = getCurrentForm();
        if (current instanceof Dialog) {
            ((Dialog) current).dispose();
            current = getCurrentForm();
        }
    }

    public void destroy() {
    }

}
